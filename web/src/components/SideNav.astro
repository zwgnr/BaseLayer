---
type SideNav = Record<string, { text: string; link: string }[]>;

const SIDEBAR: SideNav = {
  "Getting Started": [
    { text: "Intro", link: "/docs/getting-started/intro" },
    { text: "Overview", link: "/docs/getting-started/overview" },
    { text: "Setup", link: "/docs/getting-started/setup" },
    { text: "VScode Extension", link: "/docs/getting-started/vsc" },
  ],
  Themes: [
    { text: "Adaptive Themes", link: "/docs/themes/adaptive" },
    { text: "Customize", link: "/docs/themes/customize" },
  ],
  Components: [
    { text: "Badge", link: "/docs/components/badge" },
    { text: "Breadcrumbs", link: "/docs/components/breadcrumbs" },
    { text: "Button", link: "/docs/components/button" },
    { text: "Calendar", link: "/docs/components/calendar" },
    { text: "Checkbox", link: "/docs/components/checkbox" },
    { text: "Checkbox Group", link: "/docs/components/checkbox-group" },
    { text: "ComboBox", link: "/docs/components/combobox" },
    { text: "Date Field", link: "/docs/components/date-field" },
    { text: "Date Picker", link: "/docs/components/date-picker" },
    { text: "DateRange Picker", link: "/docs/components/date-range-picker" },
    { text: "Dialog", link: "/docs/components/dialog" },
    { text: "List Box", link: "/docs/components/list-box" },
    { text: "Menu", link: "/docs/components/menu" },
    { text: "Meter", link: "/docs/components/meter" },
    { text: "Modal", link: "/docs/components/modal" },
    { text: "Popover", link: "/docs/components/popover" },
    { text: "Radio Group", link: "/docs/components/radio-group" },
    { text: "Range Calendar", link: "/docs/components/range-calendar" },
    { text: "Search Field", link: "/docs/components/search-field" },
    { text: "Select", link: "/docs/components/select" },
    { text: "Slider", link: "/docs/components/slider" },
    { text: "Switch", link: "/docs/components/switch" },
    { text: "Table", link: "/docs/components/table" },
    { text: "Tabs", link: "/docs/components/tabs" },
    { text: "Tag Group", link: "/docs/components/tag-group" },
    { text: "Text Field", link: "/docs/components/text-field" },
    { text: "Time Field", link: "/docs/components/time-field" },
    { text: "Toggle", link: "/docs/components/toggle" },
    { text: "Tooltip", link: "/docs/components/tooltip" },
  ],
};

const pathname = Astro.url.pathname;
---

<script>
  window.addEventListener("DOMContentLoaded", (event) => {
    const links = Array.from(document.querySelectorAll("a"));
    links.forEach((link) => {
      const parentLi = link.parentElement;
      if (window.location.pathname === link.getAttribute("href")) {
        parentLi?.classList.add("border-primary", "font-bold");
      } else {
        parentLi?.classList.remove("border-primary", "font-bold");
      }
    });
  });
</script>

<div
  id="side-nav"
  class="small-scrollbar bottom-0 top-16 z-10 hidden w-full flex-col overflow-y-auto bg-surface py-8 pl-8 pr-8 shadow-lg md:fixed md:flex md:w-64 md:bg-transparent md:shadow-none xl:pl-0"
>
  <div class="mb-4 md:hidden">
    <a class="text-xl font-bold text-fg md:hidden" href="/">BaseLayer</a>
  </div>
  <ul class="nav-groups">
    {
      Object.entries(SIDEBAR).map(([header, children]) => (
        <li>
          <div class="nav-group">
            <div class="flex gap-2">
              <h2 class="mb-2 text-base font-bold text-fg-3">{header}</h2>
            </div>
            <ul class="mb-4">
              {children.map((child) => {
                return (
                  <li class="flex h-8 items-center border-l-2 border-border p-4 text-fg">
                    <a class="nav-link w-full text-sm" href={child.link}>
                      {child.text}
                    </a>
                  </li>
                );
              })}
            </ul>
          </div>
        </li>
      ))
    }
  </ul>
</div>
