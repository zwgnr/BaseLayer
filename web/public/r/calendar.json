{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "calendar",
  "type": "registry:ui",
  "title": "calendar",
  "author": "BaseLayer",
  "description": "A calendar displays one or more date grids and allows users to select either a single date or a contiguous range of dates.",
  "dependencies": [
    "react-aria-components",
    "tailwind-variants",
    "lucide-react",
    "tw-animate-css"
  ],
  "files": [
    {
      "path": "src/core/calendar/calendar.tsx",
      "content": "\"use client\";\n\nimport {\n\tCalendar as AriaCalendar,\n\ttype CalendarProps as AriaCalendarProps,\n\tRangeCalendar as AriaRangeCalendar,\n\ttype RangeCalendarProps as AriaRangeCalendarProps,\n\tButton,\n\tCalendarCell,\n\tCalendarGrid,\n\tCalendarGridBody,\n\tCalendarGridHeader,\n\tCalendarHeaderCell,\n\ttype DateValue,\n\tHeading,\n\tText,\n} from \"react-aria-components\";\nimport { tv } from \"tailwind-variants\";\n\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\n\nconst baseStyles = tv({\n\tslots: {\n\t\troot: \"w-fit max-w-full rounded-2xl border border-border bg-surface p-4 text-fg\",\n\t\theader: \"flex w-full items-center gap-1 pb-4\",\n\t\theading: \"flex-1 text-center font-bold\",\n\t\theaderCell: \"pb-2 text-fg-muted text-sm\",\n\t\tmonthButton:\n\t\t\t\"flex appearance-none items-center justify-center rounded-full p-2 text-center outline-none ring-focus data-[hovered]:bg-secondary data-[focus-visible]:ring-2\",\n\t},\n});\n\nconst calendar = tv({\n\textend: baseStyles,\n\tslots: {\n\t\tcell: \"flex size-9 cursor-default items-center justify-center rounded-full border-border text-center text-sm outline-focus outline-offset-2 data-[hovered]:bg-secondary data-[pressed]:bg-secondary data-[selected]:bg-primary data-[selected]:text-primary-fg data-[unavailable]:text-fg-muted data-[unavailable]:line-through data-[focus-visible]:outline-2 data-[focus-visible]:outline-focus [&[data-outside-month]]:hidden\",\n\t},\n});\n\nconst rangeCalendar = tv({\n\textend: baseStyles,\n\tslots: {\n\t\tcell: \"flex size-9 cursor-default items-center justify-center rounded-full text-center text-sm outline-none outline-offset-2 data-[selected]:rounded-none data-[hovered]:bg-secondary data-[pressed]:bg-secondary data-[selected]:bg-primary data-[selected]:text-primary-fg data-[unavailable]:text-fg-muted data-[unavailable]:line-through data-[focus-visible]:ring-2 data-[focus-visible]:ring-focus data-[focus-visible]:ring-offset-2 [&[data-outside-month]]:hidden [&[data-selection-end]]:rounded-r-full [&[data-selection-start]]:rounded-l-full\",\n\t},\n});\n\nconst styles = calendar();\nconst rangeStyles = rangeCalendar();\n\ninterface CalendarProps<T extends DateValue>\n\textends Omit<AriaCalendarProps<T>, \"className\"> {\n\terrorMessage?: string;\n\tclassName?: string;\n}\n\nconst Calendar = ({\n\tclassName,\n\terrorMessage,\n\t...props\n}: CalendarProps<DateValue>) => (\n\t<AriaCalendar {...props} className={styles.root({ className })}>\n\t\t<header className={styles.header()}>\n\t\t\t<Button className={styles.monthButton()} slot=\"previous\">\n\t\t\t\t<ChevronLeft className=\"h-5 w-5 self-center\" />\n\t\t\t</Button>\n\t\t\t<Heading className={styles.heading()} slot=\"label\" />\n\t\t\t<Button className={styles.monthButton()} slot=\"next\">\n\t\t\t\t<ChevronRight className=\"h-5 w-5 self-center\" />\n\t\t\t</Button>\n\t\t</header>\n\t\t<CalendarGrid>\n\t\t\t<CalendarGridHeader>\n\t\t\t\t{(day) => (\n\t\t\t\t\t<CalendarHeaderCell className={styles.headerCell()}>\n\t\t\t\t\t\t{day}\n\t\t\t\t\t</CalendarHeaderCell>\n\t\t\t\t)}\n\t\t\t</CalendarGridHeader>\n\t\t\t<CalendarGridBody>\n\t\t\t\t{(date) => <CalendarCell className={styles.cell()} date={date} />}\n\t\t\t</CalendarGridBody>\n\t\t</CalendarGrid>\n\t\t{errorMessage && (\n\t\t\t<Text className=\"text-danger text-sm\" slot=\"errorMessage\">\n\t\t\t\t{errorMessage}\n\t\t\t</Text>\n\t\t)}\n\t</AriaCalendar>\n);\n\ninterface RangeCalendarProps<T extends DateValue>\n\textends Omit<AriaRangeCalendarProps<T>, \"className\"> {\n\terrorMessage?: string;\n\tclassName?: string;\n}\n\nconst RangeCalendar = ({\n\tclassName,\n\terrorMessage,\n\t...props\n}: RangeCalendarProps<DateValue>) => (\n\t<AriaRangeCalendar {...props} className={rangeStyles.root({ className })}>\n\t\t<header className={rangeStyles.header()}>\n\t\t\t<Button className={rangeStyles.monthButton()} slot=\"previous\">\n\t\t\t\t<ChevronLeft className=\"h-5 w-5 self-center\" />\n\t\t\t</Button>\n\t\t\t<Heading className={rangeStyles.heading()} slot=\"label\" />\n\t\t\t<Button className={rangeStyles.monthButton()} slot=\"next\">\n\t\t\t\t<ChevronRight className=\"h-5 w-5 self-center\" />\n\t\t\t</Button>\n\t\t</header>\n\t\t<CalendarGrid>\n\t\t\t<CalendarGridHeader>\n\t\t\t\t{(day) => (\n\t\t\t\t\t<CalendarHeaderCell className={rangeStyles.headerCell()}>\n\t\t\t\t\t\t{day}\n\t\t\t\t\t</CalendarHeaderCell>\n\t\t\t\t)}\n\t\t\t</CalendarGridHeader>\n\t\t\t<CalendarGridBody>\n\t\t\t\t{(date) => <CalendarCell className={rangeStyles.cell()} date={date} />}\n\t\t\t</CalendarGridBody>\n\t\t</CalendarGrid>\n\t\t{errorMessage && (\n\t\t\t<Text className=\"text-danger text-sm\" slot=\"errorMessage\">\n\t\t\t\t{errorMessage}\n\t\t\t</Text>\n\t\t)}\n\t</AriaRangeCalendar>\n);\n\nexport { Calendar, RangeCalendar };\nexport type { CalendarProps, RangeCalendarProps };\n",
      "type": "registry:component",
      "target": "components/ui/calendar.tsx"
    }
  ],
  "tailwind": {
    "config": {
      "content": [
        "./components/**/*.{ts,tsx}"
      ],
      "theme": {
        "extend": {}
      }
    }
  },
  "cssVars": {
    "theme": {
      "--color-surface": "var(--surface)",
      "--color-surface-2": "var(--surface-2)",
      "--color-fg": "var(--fg)",
      "--color-fg-muted": "var(--fg-muted)",
      "--color-fg-disabled": "var(--fg-disabled)",
      "--color-fg-inverse": "var(--fg-inverse)",
      "--color-border": "var(--border)",
      "--color-focus": "var(--focus)",
      "--color-primary": "var(--primary)",
      "--color-primary-fg": "var(--primary-fg)",
      "--color-secondary": "var(--secondary)",
      "--color-secondary-fg": "var(--secondary-fg)",
      "--color-danger": "var(--danger)",
      "--color-danger-fg": "var(--danger-fg)"
    },
    "light": {
      "--surface": "oklch(98.5% 0 0)",
      "--surface-2": "oklch(97% 0 0)",
      "--fg": "oklch(14.5% 0 0)",
      "--fg-muted": "oklch(55.6% 0 0)",
      "--fg-inverse": "oklch(98.5% 0 0)",
      "--fg-disabled": "oklch(70.8% 0 0)",
      "--border": "oklch(87% 0 0)",
      "--focus": "oklch(68.5% 0.169 237.323)",
      "--primary": "oklch(14.5% 0 0)",
      "--primary-fg": "oklch(98.5% 0 0)",
      "--secondary": "oklch(92.2% 0 0)",
      "--secondary-fg": "oklch(14.5% 0 0)",
      "--danger": "oklch(63.7% 0.237 25.331)",
      "--danger-fg": "#ffffff"
    },
    "dark": {
      "--surface": "oklch(14.5% 0 0)",
      "--surface-2": "oklch(20.5% 0 0)",
      "--fg": "oklch(98.5% 0.001 106.423)",
      "--fg-muted": "oklch(55.6% 0 0)",
      "--fg-inverse": "oklch(98.5% 0 0)",
      "--fg-disabled": "oklch(37.1% 0 0)",
      "--border": "oklch(37.1% 0 0)",
      "--focus": "oklch(68.5% 0.169 237.323)",
      "--primary": "oklch(98.5% 0 0)",
      "--primary-fg": "oklch(14.5% 0 0)",
      "--secondary": "oklch(26.9% 0 0)",
      "--secondary-fg": "oklch(98.5% 0 0)",
      "--danger": "oklch(63.7% 0.237 25.331)",
      "--danger-fg": "oklch(98.5% 0 0)"
    }
  },
  "css": {
    "@import \"tw-animate-css\"": {}
  },
  "meta": {
    "status": "stable",
    "tags": [
      "form",
      "interactive",
      "date-time"
    ]
  },
  "categories": [
    "data-entry"
  ]
}