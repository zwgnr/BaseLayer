{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "card",
  "type": "registry:ui",
  "title": "card",
  "author": "BaseLayer",
  "description": "Displays a card with header, content, and footer.",
  "dependencies": [
    "react-aria-components",
    "tailwind-variants",
    "lucide-react",
    "tw-animate-css"
  ],
  "files": [
    {
      "path": "src/core/card/card.tsx",
      "content": "\"use client\";\n\nimport type { HTMLAttributes } from \"react\";\n\nimport { tv, type VariantProps } from \"tailwind-variants\";\n\nconst card = tv({\n\tslots: {\n\t\troot: \"rounded-2xl border-2 bg-surface text-fg\",\n\t\theader: \"flex flex-col space-y-1.5 p-6\",\n\t\ttitle: \"font-semibold text-2xl leading-none tracking-tight\",\n\t\tdescription: \"text-fg-muted text-sm\",\n\t\tcontent: \"p-6 pt-0\",\n\t\tfooter: \"flex items-center p-6 pt-0\",\n\t},\n\tvariants: {\n\t\tvariant: {\n\t\t\toutlined: {\n\t\t\t\troot: \"border border-border/50\",\n\t\t\t},\n\t\t\tfilled: {\n\t\t\t\troot: \"border-surface-2 bg-surface-2\",\n\t\t\t},\n\t\t},\n\t},\n\tdefaultVariants: {\n\t\tvariant: \"outlined\",\n\t},\n});\n\nconst styles = card();\n\ntype CardVariantProps = VariantProps<typeof card>;\n\ninterface CardProps extends HTMLAttributes<HTMLDivElement>, CardVariantProps {\n\tclassName?: string;\n\ttitle?: string;\n\tdescription?: string;\n}\n\ninterface CardHeaderProps extends HTMLAttributes<HTMLDivElement> {\n\tclassName?: string;\n}\n\ninterface CardContentProps extends HTMLAttributes<HTMLDivElement> {\n\tclassName?: string;\n}\n\ninterface CardFooterProps extends HTMLAttributes<HTMLDivElement> {\n\tclassName?: string;\n}\n\nconst Card = ({\n\tclassName,\n\tvariant,\n\ttitle,\n\tdescription,\n\tchildren,\n\t...props\n}: CardProps) => (\n\t<div className={styles.root({ variant, className })} {...props}>\n\t\t{(title || description) && (\n\t\t\t<div className={styles.header()}>\n\t\t\t\t{title && <h3 className={styles.title()}>{title}</h3>}\n\t\t\t\t{description && <p className={styles.description()}>{description}</p>}\n\t\t\t</div>\n\t\t)}\n\t\t{children}\n\t</div>\n);\n\nconst CardHeader = ({ className, ...props }: CardHeaderProps) => (\n\t<div className={styles.header({ className })} {...props} />\n);\n\nconst CardContent = ({ className, ...props }: CardContentProps) => (\n\t<div className={styles.content({ className })} {...props} />\n);\n\nconst CardFooter = ({ className, ...props }: CardFooterProps) => (\n\t<div className={styles.footer({ className })} {...props} />\n);\n\nexport { Card, CardHeader, CardContent, CardFooter };\nexport type { CardProps, CardHeaderProps, CardContentProps, CardFooterProps };\n",
      "type": "registry:component",
      "target": "components/ui/card.tsx"
    }
  ],
  "tailwind": {
    "config": {
      "content": [
        "./components/**/*.{ts,tsx}"
      ],
      "theme": {
        "extend": {}
      }
    }
  },
  "cssVars": {
    "theme": {
      "--color-surface": "var(--surface)",
      "--color-surface-2": "var(--surface-2)",
      "--color-fg": "var(--fg)",
      "--color-fg-muted": "var(--fg-muted)",
      "--color-fg-disabled": "var(--fg-disabled)",
      "--color-fg-inverse": "var(--fg-inverse)",
      "--color-border": "var(--border)",
      "--color-focus": "var(--focus)",
      "--color-primary": "var(--primary)",
      "--color-primary-fg": "var(--primary-fg)",
      "--color-secondary": "var(--secondary)",
      "--color-secondary-fg": "var(--secondary-fg)",
      "--color-danger": "var(--danger)",
      "--color-danger-fg": "var(--danger-fg)"
    },
    "light": {
      "--surface": "oklch(98.5% 0 0)",
      "--surface-2": "oklch(97% 0 0)",
      "--fg": "oklch(14.5% 0 0)",
      "--fg-muted": "oklch(55.6% 0 0)",
      "--fg-inverse": "oklch(98.5% 0 0)",
      "--fg-disabled": "oklch(70.8% 0 0)",
      "--border": "oklch(87% 0 0)",
      "--focus": "oklch(68.5% 0.169 237.323)",
      "--primary": "oklch(14.5% 0 0)",
      "--primary-fg": "oklch(98.5% 0 0)",
      "--secondary": "oklch(92.2% 0 0)",
      "--secondary-fg": "oklch(14.5% 0 0)",
      "--danger": "oklch(63.7% 0.237 25.331)",
      "--danger-fg": "#ffffff"
    },
    "dark": {
      "--surface": "oklch(14.5% 0 0)",
      "--surface-2": "oklch(20.5% 0 0)",
      "--fg": "oklch(98.5% 0.001 106.423)",
      "--fg-muted": "oklch(55.6% 0 0)",
      "--fg-inverse": "oklch(98.5% 0 0)",
      "--fg-disabled": "oklch(37.1% 0 0)",
      "--border": "oklch(37.1% 0 0)",
      "--focus": "oklch(68.5% 0.169 237.323)",
      "--primary": "oklch(98.5% 0 0)",
      "--primary-fg": "oklch(14.5% 0 0)",
      "--secondary": "oklch(26.9% 0 0)",
      "--secondary-fg": "oklch(98.5% 0 0)",
      "--danger": "oklch(63.7% 0.237 25.331)",
      "--danger-fg": "oklch(98.5% 0 0)"
    }
  },
  "css": {
    "@import \"tw-animate-css\"": {}
  },
  "meta": {
    "status": "stable",
    "tags": [
      "layout",
      "container",
      "display"
    ]
  },
  "categories": [
    "layout"
  ]
}