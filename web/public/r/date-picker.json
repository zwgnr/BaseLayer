{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "date-picker",
  "type": "registry:ui",
  "title": "date-picker",
  "author": "BaseLayer",
  "description": "A date picker combines one or more DateFields with a calendar popover, allowing users to enter or select a single date/time or a range.",
  "dependencies": [
    "react-aria-components",
    "tailwind-variants",
    "lucide-react",
    "tw-animate-css"
  ],
  "registryDependencies": [
    "calendar"
  ],
  "files": [
    {
      "path": "src/core/date-picker/date-picker.tsx",
      "content": "\"use client\";\n\nimport type {\n\tDatePickerProps as AriaDatePickerProps,\n\tDateRangePickerProps as AriaDateRangePickerProps,\n} from \"react-aria-components\";\nimport {\n\tDatePicker as AriaDatePicker,\n\tDateRangePicker as AriaDateRangePicker,\n\tButton,\n\tDateInput,\n\tDateSegment,\n\ttype DateValue,\n\tDialog,\n\tFieldError,\n\tGroup,\n\tLabel,\n\tPopover,\n\tText,\n} from \"react-aria-components\";\nimport { tv } from \"tailwind-variants\";\n\nimport { ChevronDown } from \"lucide-react\";\n\nimport { Calendar, RangeCalendar } from \"@/components/ui/calendar/calendar\";\n\nconst baseStyles = tv({\n\tslots: {\n\t\tinput:\n\t\t\t\"appearance-none rounded-lg px-3 py-1.5 outline-none ring-primary transition-all\",\n\t\tpopover:\n\t\t\t\"overflow-auto rounded-2xl data-[entering]:animate-fade data-[exiting]:animate-fadeOut\",\n\t},\n});\n\nconst datePicker = tv({\n\textend: baseStyles,\n\tslots: {\n\t\tgroup:\n\t\t\t\"relative flex min-h-11 w-auto min-w-48 items-center rounded-lg border border-border bg-surface transition-all data-[focus-within]:border-transparent data-[focus-within]:bg-surface data-[focus-within]:ring-2 data-[focus-within]:ring-primary data-[focus-within]:ring-offset-surface\",\n\t\tdateSegment:\n\t\t\t\"min-w-16 rounded-md p-1 text-end outline-none focus:bg-primary focus:text-primary-fg data-[placeholder]:text-fg-muted data-[type='literal']:text-fg-muted data-[placeholder]:focus:text-primary-fg\",\n\t},\n});\n\nconst dateRangePicker = tv({\n\textend: baseStyles,\n\tslots: {\n\t\tgroup:\n\t\t\t\"relative flex min-h-11 w-full flex-wrap items-center rounded-lg border border-border bg-surface transition-all data-[focus-within]:border-transparent data-[focus-within]:bg-surface data-[focus-within]:ring-2 data-[focus-within]:ring-primary data-[focus-within]:ring-offset-surface\",\n\t\tdateSegment:\n\t\t\t\"rounded-md p-1 text-end outline-none focus:bg-primary focus:text-primary-fg data-[placeholder]:text-fg-muted data-[type='literal']:text-fg-muted data-[placeholder]:focus:text-primary-fg\",\n\t\tseparator: \"px-2 text-fg-muted\",\n\t},\n});\n\nconst styles = datePicker();\nconst rangeStyles = dateRangePicker();\n\ninterface DatePickerProps<T extends DateValue> extends AriaDatePickerProps<T> {\n\tlabel?: string;\n\tdescription?: string;\n\terrorMessage?: string;\n}\n\nconst DatePicker = <T extends DateValue>({\n\tclassName,\n\tlabel,\n\tdescription,\n\terrorMessage,\n\tchildren,\n\t...props\n}: DatePickerProps<T>) => (\n\t<AriaDatePicker className=\"flex flex-col gap-1\" {...props}>\n\t\t{label && <Label className=\"text-sm\">{label}</Label>}\n\t\t<Group className={styles.group()}>\n\t\t\t<DateInput className={styles.input()}>\n\t\t\t\t{(segment) => (\n\t\t\t\t\t<DateSegment className={styles.dateSegment()} segment={segment} />\n\t\t\t\t)}\n\t\t\t</DateInput>\n\t\t\t<Button className=\"absolute right-2 w-6 rounded-xs outline-offset-0\">\n\t\t\t\t<ChevronDown className=\"size-4 text-fg-muted\" />\n\t\t\t</Button>\n\t\t</Group>\n\t\t{description && (\n\t\t\t<Text className=\"text-fg-muted text-sm\" slot=\"description\">\n\t\t\t\t{description}\n\t\t\t</Text>\n\t\t)}\n\t\t<FieldError className=\"text-danger text-sm\">{errorMessage}</FieldError>\n\t\t<Popover className={styles.popover()}>\n\t\t\t<Dialog>\n\t\t\t\t<Calendar />\n\t\t\t</Dialog>\n\t\t</Popover>\n\t</AriaDatePicker>\n);\n\ninterface DateRangePickerProps<T extends DateValue>\n\textends AriaDateRangePickerProps<T> {\n\tlabel?: string;\n\tdescription?: string;\n\terrorMessage?: string;\n\tclassName?: string;\n}\n\nconst DateRangePicker = <T extends DateValue>({\n\tclassName,\n\tlabel,\n\tdescription,\n\terrorMessage,\n\tchildren,\n\t...props\n}: DateRangePickerProps<T>) => (\n\t<AriaDateRangePicker className=\"flex w-full flex-col gap-1\" {...props}>\n\t\t{label && <Label className=\"text-sm\">{label}</Label>}\n\t\t<Group className={rangeStyles.group({ className })}>\n\t\t\t<DateInput slot=\"start\" className={rangeStyles.input()}>\n\t\t\t\t{(segment) => (\n\t\t\t\t\t<DateSegment\n\t\t\t\t\t\tclassName={rangeStyles.dateSegment()}\n\t\t\t\t\t\tsegment={segment}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</DateInput>\n\t\t\t<span className={rangeStyles.separator()} aria-hidden=\"true\">\n\t\t\t\tâ€“\n\t\t\t</span>\n\t\t\t<DateInput slot=\"end\" className={rangeStyles.input()}>\n\t\t\t\t{(segment) => (\n\t\t\t\t\t<DateSegment\n\t\t\t\t\t\tclassName={rangeStyles.dateSegment()}\n\t\t\t\t\t\tsegment={segment}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</DateInput>\n\t\t\t<Button className=\"absolute right-2 w-6 rounded-xs outline-offset-0\">\n\t\t\t\t<ChevronDown className=\"size-4 text-fg-muted\" />\n\t\t\t</Button>\n\t\t</Group>\n\t\t{description && (\n\t\t\t<Text className=\"text-fg-muted text-sm\" slot=\"description\">\n\t\t\t\t{description}\n\t\t\t</Text>\n\t\t)}\n\t\t<FieldError className=\"text-danger text-sm\">{errorMessage}</FieldError>\n\t\t<Popover className={rangeStyles.popover()}>\n\t\t\t<Dialog>\n\t\t\t\t<RangeCalendar />\n\t\t\t</Dialog>\n\t\t</Popover>\n\t</AriaDateRangePicker>\n);\n\nexport { DatePicker, DateRangePicker };\nexport type { DatePickerProps, DateRangePickerProps };\n",
      "type": "registry:component",
      "target": "components/ui/date-picker.tsx"
    }
  ],
  "tailwind": {
    "config": {
      "content": [
        "./components/**/*.{ts,tsx}"
      ],
      "theme": {
        "extend": {}
      }
    }
  },
  "cssVars": {
    "theme": {
      "--color-surface": "var(--surface)",
      "--color-surface-2": "var(--surface-2)",
      "--color-fg": "var(--fg)",
      "--color-fg-muted": "var(--fg-muted)",
      "--color-fg-disabled": "var(--fg-disabled)",
      "--color-fg-inverse": "var(--fg-inverse)",
      "--color-border": "var(--border)",
      "--color-focus": "var(--focus)",
      "--color-primary": "var(--primary)",
      "--color-primary-fg": "var(--primary-fg)",
      "--color-secondary": "var(--secondary)",
      "--color-secondary-fg": "var(--secondary-fg)",
      "--color-danger": "var(--danger)",
      "--color-danger-fg": "var(--danger-fg)"
    },
    "light": {
      "--surface": "oklch(98.5% 0 0)",
      "--surface-2": "oklch(97% 0 0)",
      "--fg": "oklch(14.5% 0 0)",
      "--fg-muted": "oklch(55.6% 0 0)",
      "--fg-inverse": "oklch(98.5% 0 0)",
      "--fg-disabled": "oklch(70.8% 0 0)",
      "--border": "oklch(87% 0 0)",
      "--focus": "oklch(68.5% 0.169 237.323)",
      "--primary": "oklch(14.5% 0 0)",
      "--primary-fg": "oklch(98.5% 0 0)",
      "--secondary": "oklch(92.2% 0 0)",
      "--secondary-fg": "oklch(14.5% 0 0)",
      "--danger": "oklch(63.7% 0.237 25.331)",
      "--danger-fg": "#ffffff"
    },
    "dark": {
      "--surface": "oklch(14.5% 0 0)",
      "--surface-2": "oklch(20.5% 0 0)",
      "--fg": "oklch(98.5% 0.001 106.423)",
      "--fg-muted": "oklch(55.6% 0 0)",
      "--fg-inverse": "oklch(98.5% 0 0)",
      "--fg-disabled": "oklch(37.1% 0 0)",
      "--border": "oklch(37.1% 0 0)",
      "--focus": "oklch(68.5% 0.169 237.323)",
      "--primary": "oklch(98.5% 0 0)",
      "--primary-fg": "oklch(14.5% 0 0)",
      "--secondary": "oklch(26.9% 0 0)",
      "--secondary-fg": "oklch(98.5% 0 0)",
      "--danger": "oklch(63.7% 0.237 25.331)",
      "--danger-fg": "oklch(98.5% 0 0)"
    }
  },
  "css": {
    "@import \"tw-animate-css\"": {}
  },
  "meta": {
    "status": "stable",
    "tags": [
      "form",
      "interactive",
      "date-time"
    ]
  },
  "categories": [
    "forms"
  ]
}