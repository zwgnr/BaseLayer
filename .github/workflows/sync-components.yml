name: CI/CD Pipeline

on:
  pull_request:
    paths:
      - 'packages/components/src/**'
      - 'packages/components/scripts/**'
      - 'packages/components/package.json'
  push:
    tags:
      - 'v*'
    branches:
      - main

jobs:
  pr-check:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    name: Check Manifest Drift
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Build components and generate manifest
        run: pnpm --filter @baselayer/components build
        
      - name: Check for manifest drift
        run: |
          if git diff --quiet packages/components/dist/; then
            echo "✅ Manifest is in sync"
          else
            echo "❌ Manifest out of sync! Generated files differ from committed files."
            echo ""
            echo "Please run the following locally and commit the changes:"
            echo "  pnpm --filter @baselayer/components build"
            echo ""
            echo "Changed files:"
            git diff --name-only packages/components/dist/
            echo ""
            echo "Diff:"
            git diff packages/components/dist/
            exit 1
          fi

  build-and-test:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    name: Build and Test
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Build all packages
        run: pnpm build
        
      - name: Generate fresh manifest
        run: pnpm --filter @baselayer/components build

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    name: Release
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Build all packages
        run: pnpm build
        
      - name: Generate release manifest
        run: pnpm --filter @baselayer/components build
        
      - name: Create release artifacts
        run: |
          mkdir -p release-artifacts
          cp packages/components/dist/manifest.json release-artifacts/
          cp -r packages/components/dist/schemas release-artifacts/
          
      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: component-manifest-${{ github.ref_name }}
          path: release-artifacts/
          
      - name: Publish MCP Server to NPM
        run: pnpm --filter @baselayer/mcp publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            ## Component Manifest
            
            - Manifest SHA: ${{ hashFiles('packages/components/dist/manifest.json') }}
            - Components: ${{ fromJson(steps.count.outputs.count) }}
            
            Download the component manifest and schemas from the artifacts below.
          draft: false
          prerelease: false 